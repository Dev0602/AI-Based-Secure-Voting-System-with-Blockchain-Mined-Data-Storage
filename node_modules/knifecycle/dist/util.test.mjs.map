{"version":3,"file":"util.test.mjs","names":["assert","sinon","reuseSpecialProps","wrapInitializer","parseDependencyDeclaration","name","autoName","type","inject","autoInject","alsoInject","useInject","mergeInject","parseInjections","singleton","extra","initializer","constant","service","autoService","provider","autoProvider","handler","autoHandler","SPECIAL_PROPS","aProviderInitializer","aServiceInitializer","describe","it","from","to","$name","$type","$inject","$singleton","$extra","httpHandler","newFn","notEqual","equal","deepEqual","newFn2","baseServiceInitializer","log","stub","newInitializer","newService","args","INJECT","baseInitializer","baseProviderInitializer","dependencies","throws","fromDependencies","fromInitializer","toDependencies","toInitializer","baseProvider","ENV","mysql","db","noop","undefined","debug","aDebug","foo","bar","SINGLETON","baseName","NAME","hash","initHash","initializeHash","extraInformations","EXTRA","baseExtraInformations","yolo","additionalExtraInformations","baseType","TYPE","baseValue","constantInitializer","VALUE","aServiceBuilder","_services","extraData","cool","nice","baseServiceBuilder","initializeMySQL","aProviderInitializerBuilder","injectedServices","services","kikooo","lol","theInitializer","sampleHandler","theHandler","result","deps","serviceName","mappedName","optional"],"sources":["../src/util.test.ts"],"sourcesContent":["import assert from 'assert';\nimport sinon from 'sinon';\nimport {\n  reuseSpecialProps,\n  wrapInitializer,\n  parseDependencyDeclaration,\n  name,\n  autoName,\n  type,\n  inject,\n  autoInject,\n  alsoInject,\n  useInject,\n  mergeInject,\n  parseInjections,\n  singleton,\n  extra,\n  initializer,\n  constant,\n  service,\n  autoService,\n  provider,\n  autoProvider,\n  handler,\n  autoHandler,\n  SPECIAL_PROPS,\n} from './util';\nimport type { PromiseValue } from 'type-fest';\nimport type { Provider } from './util';\nimport type { Dependencies, ServiceInitializer } from '.';\n\nasync function aProviderInitializer() {\n  return {\n    service: 'A_PROVIDER_SERVICE',\n  };\n}\nasync function aServiceInitializer() {\n  return 'A_PROVIDER_SERVICE';\n}\n\ndescribe('reuseSpecialProps', () => {\n  it('should work', () => {\n    // We can safely ignore coverage here since the\n    // function are here just as placeholders\n    /* istanbul ignore next */\n    async function from() {\n      return 'from';\n    }\n    /* istanbul ignore next */\n    async function to() {\n      return 'to';\n    }\n\n    from.$name = 'from';\n    from.$type = 'service';\n    from.$inject = ['ki', 'kooo', 'lol'];\n    from.$singleton = false;\n    from.$extra = { httpHandler: true };\n\n    const newFn = reuseSpecialProps(from, to);\n\n    assert.notEqual(newFn, to);\n    assert.equal((newFn as any).$name, from.$name);\n    assert.equal((newFn as any).$type, from.$type);\n    assert.notEqual((newFn as any).$inject, from.$inject);\n    assert.deepEqual((newFn as any).$inject, from.$inject);\n    assert.equal((newFn as any).$singleton, from.$singleton);\n    assert.notEqual((newFn as any).$extra, from.$extra);\n    assert.deepEqual((newFn as any).$extra, from.$extra);\n\n    const newFn2 = reuseSpecialProps(from, to, {\n      $name: 'yolo',\n    });\n\n    assert.notEqual(newFn2, to);\n    assert.equal((newFn2 as any).$name, 'yolo');\n    assert.equal((newFn2 as any).$type, from.$type);\n    assert.notEqual((newFn2 as any).$inject, from.$inject);\n    assert.deepEqual((newFn2 as any).$inject, from.$inject);\n    assert.equal((newFn2 as any).$singleton, from.$singleton);\n    assert.notEqual((newFn as any).$extra, from.$extra);\n    assert.deepEqual((newFn as any).$extra, from.$extra);\n  });\n});\n\ndescribe('wrapInitializer', () => {\n  it('should work with a service initializer', async () => {\n    async function baseServiceInitializer() {\n      return () => 'test';\n    }\n\n    const log = sinon.stub();\n    const newInitializer = wrapInitializer(\n      async ({ log }: { log: any }, service: () => string) => {\n        log('Wrapping...');\n        return () => service() + '-wrapped';\n      },\n      service(\n        baseServiceInitializer,\n        'baseServiceInitializer',\n        ['log', '?test'],\n        false,\n        {\n          httpHandler: false,\n        },\n      ),\n    );\n\n    const newService = await newInitializer({ log });\n    assert.equal(newService(), 'test-wrapped');\n    assert.deepEqual(log.args, [['Wrapping...']]);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['log', '?test']);\n  });\n\n  it('should work with a provider initialzer', async () => {\n    async function baseInitializer() {\n      return { service: () => 'test' };\n    }\n\n    const log = sinon.stub();\n    const baseProviderInitializer = provider(\n      baseInitializer,\n      'baseInitializer',\n      ['log', '?test'],\n      false,\n      {\n        httpHandler: false,\n      },\n    );\n    const newInitializer = wrapInitializer(\n      async (\n        { log }: { log: (message: string) => void },\n        service,\n      ): Promise<Provider<() => string>> => {\n        log('Wrapping...');\n        return { service: () => service.service() + '-wrapped' };\n      },\n      baseProviderInitializer,\n    );\n\n    const newService = await newInitializer({ log });\n    assert.equal(newService.service(), 'test-wrapped');\n    assert.deepEqual(log.args, [['Wrapping...']]);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['log', '?test']);\n  });\n});\n\ndescribe('inject', () => {\n  it('should allow to decorate an initializer with dependencies', () => {\n    const dependencies = ['ENV'];\n    const newInitializer = inject<{ ENV: string }, string>(\n      dependencies,\n      provider(aProviderInitializer, 'aProvider'),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer builder with dependencies', () => {\n    const dependencies = ['ENV'];\n    const newInitializer = inject<{ ENV: string }, string>(\n      dependencies,\n      aProviderInitializer,\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with dependencies', () => {\n    const dependencies = ['ENV'];\n    const newInitializer = inject<{ ENV: string }, string>(\n      dependencies,\n      service(aServiceInitializer, 'aService'),\n    );\n\n    assert.notEqual(newInitializer, aServiceInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer builder with dependencies', () => {\n    const dependencies = ['ENV'];\n    const newInitializer = inject<{ ENV: string }, string>(\n      dependencies,\n      aServiceInitializer,\n    );\n\n    assert.notEqual(newInitializer, aServiceInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with mapped dependencies', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const newInitializer = inject(dependencies, aProviderInitializer);\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should fail with a constant', () => {\n    assert.throws(() => {\n      inject(\n        ['test'],\n        constant('test', 'test') as unknown as ServiceInitializer<\n          Dependencies,\n          unknown\n        >,\n      );\n    }, /E_BAD_INJECT_IN_CONSTANT/);\n  });\n});\ndescribe('useInject', () => {\n  it('should set the right dependencies', () => {\n    const fromDependencies = ['ENV', 'CORS'];\n    const fromInitializer = inject(fromDependencies, aProviderInitializer);\n    const toDependencies = ['db', 'log'];\n    const toInitializer = inject(toDependencies, aProviderInitializer);\n    const newInitializer = useInject(fromInitializer, toInitializer);\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], fromDependencies);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], toDependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      ...fromDependencies,\n    ]);\n  });\n});\n\ndescribe('mergeInject', () => {\n  it('should amend dependencies', () => {\n    const fromDependencies = ['ENV', 'CORS'];\n    const fromInitializer = inject<\n      {\n        db: 'db';\n        log: 'log';\n      },\n      PromiseValue<ReturnType<typeof aProviderInitializer>>\n    >(fromDependencies, aProviderInitializer);\n    const toDependencies = ['db', 'log'];\n    const toInitializer = inject(toDependencies, aProviderInitializer);\n    const newInitializer = mergeInject(fromInitializer, toInitializer);\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], fromDependencies);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], toDependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      ...toDependencies,\n      ...fromDependencies,\n    ]);\n  });\n});\n\ndescribe('autoInject', () => {\n  it('should allow to decorate an initializer with dependencies', () => {\n    const baseProvider =\n      async ({ ENV, mysql: db }) =>\n      async () => ({\n        ENV,\n        db,\n      });\n    const dependencies = ['ENV', 'mysql'];\n    const newInitializer = autoInject(baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with a function name', () => {\n    async function baseProvider({ ENV, mysql: db }) {\n      async () => ({\n        ENV,\n        db,\n      });\n    }\n    const dependencies = ['ENV', 'mysql'];\n    const newInitializer = autoInject(baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with optional dependencies', () => {\n    const noop = () => undefined;\n    const baseProvider =\n      async ({ ENV, log = noop, debug: aDebug = noop }) =>\n      async () => ({\n        ENV,\n        log,\n        aDebug,\n      });\n    const dependencies = ['ENV', '?log', '?debug'];\n    const newInitializer = autoInject(baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with several arguments', () => {\n    const noop = () => undefined;\n    const baseProvider =\n      async ({ ENV, log = noop, debug: aDebug = noop }) =>\n      async () => ({\n        ENV,\n        log,\n        aDebug,\n      });\n    const dependencies = ['ENV', '?log', '?debug'];\n    const newInitializer = autoInject(baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with complex arguments', () => {\n    const noop = () => undefined;\n    const baseProvider =\n      async ({ ENV, log = noop, debug: aDebug = noop }) =>\n      async () => ({\n        ENV,\n        log,\n        aDebug,\n      });\n    const dependencies = ['ENV', '?log', '?debug'];\n    const newInitializer = autoInject(baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should fail with non async initializers', () => {\n    assert.throws(() => {\n      autoInject((({ foo: bar = { bar: 'foo' } }) => {\n        return bar;\n      }) as any);\n    }, /E_NON_ASYNC_INITIALIZER/);\n  });\n\n  it('should fail with too complex injections', () => {\n    assert.throws(() => {\n      autoInject(async ({ foo: bar = { bar: 'foo' } }) => {\n        return bar;\n      });\n    }, /E_AUTO_INJECTION_FAILURE/);\n  });\n\n  it('should fail with no injections', () => {\n    assert.throws(() => {\n      autoInject(async () => undefined);\n    }, /E_AUTO_INJECTION_FAILURE/);\n  });\n});\n\ndescribe('alsoInject', () => {\n  it('should allow to decorate an initializer with dependencies', () => {\n    const newInitializer = alsoInject(\n      ['ENV'],\n      inject(['TEST'], aProviderInitializer),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['TEST', 'ENV']);\n  });\n\n  it('should allow to decorate an initializer with dependencies', () => {\n    const newInitializer = alsoInject(['ENV'], aProviderInitializer);\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['ENV']);\n  });\n\n  it('should dedupe dependencies', () => {\n    const baseProvider = inject(['?TEST'], aProviderInitializer);\n    const newInitializer = alsoInject(\n      ['ENV', '?NODE_ENV', '?TEST', 'TEST2', 'db>mysql'],\n      alsoInject(['ENV', 'NODE_ENV', '?TEST', '?TEST2', 'mysql'], baseProvider),\n    );\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      'mysql',\n      'ENV',\n      'NODE_ENV',\n      '?TEST',\n      'TEST2',\n      'db>mysql',\n    ]);\n  });\n\n  it('should preserve single optional dependencies', () => {\n    const baseProvider = inject(['ENV', '?TEST'], aProviderInitializer);\n    const newInitializer = alsoInject(\n      ['ENV', '?TEST2'],\n      alsoInject(['ENV', '?TEST3'], baseProvider),\n    );\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      '?TEST',\n      '?TEST3',\n      'ENV',\n      '?TEST2',\n    ]);\n  });\n\n  it('should preserve mapped dependencies', () => {\n    const baseProvider = inject(['mysql', '?sftp'], aProviderInitializer);\n    const newInitializer = alsoInject(['db>mysql', '?ftp>sftp'], baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      'mysql',\n      '?sftp',\n      'db>mysql',\n      '?ftp>sftp',\n    ]);\n  });\n\n  it('should solve dependencies alias name clash', () => {\n    const baseProvider = inject(['?TEST'], aProviderInitializer);\n    const newInitializer = alsoInject(\n      ['ENV', '?NODE_ENV', '?TEST', 'db>mysql', '?log>logly'],\n      alsoInject(\n        ['ENV', 'NODE_ENV', '?TEST', 'db>pg', '?log>logger'],\n        baseProvider,\n      ),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      'ENV',\n      'NODE_ENV',\n      '?TEST',\n      'db>mysql',\n      '?log>logly',\n    ]);\n  });\n\n  it('should solve dependencies alias name clash', () => {\n    const baseProvider = inject(['?TEST'], aProviderInitializer);\n    const newInitializer = alsoInject(\n      ['ENV', '?NODE_ENV', '?TEST', 'db>mysql', '?log>logly'],\n      alsoInject(\n        ['ENV', 'NODE_ENV', '?TEST', 'db>pg', '?log>logger'],\n        baseProvider,\n      ),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      'ENV',\n      'NODE_ENV',\n      '?TEST',\n      'db>mysql',\n      '?log>logly',\n    ]);\n  });\n});\n\ndescribe('parseInjections', () => {\n  it('should work with TypeScript dependencies', () => {\n    assert.deepEqual(\n      parseInjections(`async function initNexmo({\n      ENV,\n      NEXMO,\n      log = noop,\n    }: {\n      ENV: any;\n      NEXMO: any;\n      log: Function;\n    }): Promise<SMSService> {}`),\n      ['ENV', 'NEXMO', '?log'],\n    );\n  });\n\n  it('should allow to decorate an initializer with dependencies', () => {\n    const newInitializer = alsoInject(['ENV'], aProviderInitializer);\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['ENV']);\n  });\n});\n\ndescribe('singleton', () => {\n  it('should allow to decorate an initializer with singleton option', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const newInitializer = inject(\n      dependencies,\n      singleton(aProviderInitializer, true),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], true);\n  });\n\n  it('should allow to be used several times', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const newInitializer = inject(\n      dependencies,\n      singleton(singleton(aProviderInitializer), false),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], false);\n  });\n});\n\ndescribe('name', () => {\n  it('should allow to decorate an initializer with a name', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseName = 'hash';\n    const newInitializer = inject(\n      dependencies,\n      name(baseName, aProviderInitializer),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n  });\n});\n\ndescribe('autoName', () => {\n  it('should allow to decorate an initializer with its function name', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseName = 'hash';\n    const newInitializer = inject(\n      dependencies,\n      autoName(async function hash() {\n        return undefined;\n      }),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n  });\n\n  it('should allow to decorate an initializer with its init like function name', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseName = 'hash';\n    const newInitializer = inject(\n      dependencies,\n      autoName(async function initHash() {\n        return undefined;\n      }),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n  });\n\n  it('should allow to decorate an initializer with its initialize like function name', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseName = 'hash';\n    const newInitializer = inject(\n      dependencies,\n      autoName(async function initializeHash() {\n        return undefined;\n      }),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n  });\n\n  it('should allow to decorate a bounded initializer', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseName = 'hash';\n    const newInitializer = autoName(\n      inject(\n        dependencies,\n        singleton(async function initializeHash() {\n          return undefined;\n        }),\n      ),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], true);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n  });\n\n  it('should fail with anonymous functions', () => {\n    assert.throws(() => {\n      autoName(async () => undefined);\n    }, /E_AUTO_NAMING_FAILURE/);\n  });\n});\n\ndescribe('extra', () => {\n  it('should allow to decorate an initializer with extra infos', () => {\n    const extraInformations = { httpHandler: true };\n    const newInitializer = extra(extraInformations, aProviderInitializer);\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraInformations);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraInformations);\n  });\n\n  it('should allow to decorate an initializer with extra infos', () => {\n    const extraInformations = { httpHandler: true };\n    const newInitializer = extra(extraInformations, aProviderInitializer, true);\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraInformations);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraInformations);\n  });\n\n  it('should allow to decorate an initializer with additional extra infos', () => {\n    const baseExtraInformations = { yolo: true, httpHandler: false };\n    const additionalExtraInformations = { httpHandler: true };\n    const newInitializer = extra(\n      baseExtraInformations,\n      extra(additionalExtraInformations, aProviderInitializer),\n      true,\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.EXTRA], baseExtraInformations);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.EXTRA], baseExtraInformations);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], {\n      ...baseExtraInformations,\n      ...baseExtraInformations,\n    });\n  });\n});\n\ndescribe('type', () => {\n  it('should allow to decorate an initializer with a type', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseName = 'hash';\n    const baseType = 'service';\n    const newInitializer = inject(\n      dependencies,\n      name(baseName, type(baseType, aProviderInitializer)),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n});\n\ndescribe('initializer', () => {\n  it('should allow to decorate an initializer with every properties', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseName = 'hash';\n    const baseType = 'service';\n    const newInitializer = initializer(\n      {\n        type: baseType,\n        inject: dependencies,\n        singleton: true,\n        name: baseName,\n      },\n      aServiceInitializer,\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], true);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n\n  it('should fail with bad properties', () => {\n    assert.throws(() => {\n      initializer(\n        {\n          name: 'yolo',\n          yolo: '',\n        } as any,\n        async () => undefined,\n      );\n    }, /E_BAD_PROPERTY/);\n  });\n});\n\ndescribe('constant', () => {\n  it('should allow to create an initializer from a constant', async () => {\n    const baseName = 'THE_VALUE';\n    const baseValue = 42;\n    const constantInitializer = constant(baseName, baseValue);\n\n    assert.equal(constantInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(constantInitializer[SPECIAL_PROPS.TYPE], 'constant');\n    assert.equal(constantInitializer[SPECIAL_PROPS.VALUE], baseValue);\n  });\n\n  it('should fail with dependencies since it makes no sense', () => {\n    assert.throws(() => {\n      constant(\n        'time',\n        inject(['hash3'], async () => undefined),\n      );\n    }, /E_CONSTANT_INJECTION/);\n  });\n});\n\ndescribe('service', () => {\n  it('should allow to create an initializer from a service builder', async () => {\n    const aServiceBuilder = async (_services: unknown) => 'A_SERVICE';\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const extraData = { cool: true };\n    const baseName = 'hash';\n    const baseType = 'service';\n    const newInitializer = service(\n      aServiceBuilder,\n      baseName,\n      dependencies,\n      true,\n      extraData,\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], true);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraData);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n\n  it('should allow to create an initializer from a generic service builder', async () => {\n    const aServiceBuilder = async <T>(_services: T) => '';\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const extraData = { nice: true };\n    const baseName = 'hash';\n    const baseType = 'service';\n    const newInitializer = service(\n      aServiceBuilder,\n      baseName,\n      dependencies,\n      true,\n      extraData,\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], true);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraData);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n\n  it('should fail with no service builder', () => {\n    assert.throws(() => {\n      service(undefined as any);\n    }, /E_NO_SERVICE_BUILDER/);\n  });\n});\n\ndescribe('autoService', () => {\n  it('should detect the service details', () => {\n    const baseServiceBuilder = async function initializeMySQL({ ENV }) {\n      return ENV;\n    };\n    const newInitializer = autoService(baseServiceBuilder);\n\n    assert.notEqual(newInitializer, baseServiceBuilder);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['ENV']);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], 'mySQL');\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], 'service');\n  });\n\n  it('should detect the service details even with no dependencies', () => {\n    const baseServiceBuilder = async function initializeMySQL() {\n      return;\n    };\n    const newInitializer = autoService(baseServiceBuilder);\n\n    assert.notEqual(newInitializer, baseServiceBuilder);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], []);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], 'mySQL');\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], 'service');\n  });\n});\n\ndescribe('provider', () => {\n  it('should allow to create an initializer from a provider builder', async () => {\n    const aProviderInitializerBuilder = async () => ({ service: 'A_SERVICE' });\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const extraData = { singleton: true };\n    const baseName = 'hash';\n    const baseType = 'provider';\n    const newInitializer = provider(\n      aProviderInitializerBuilder,\n      baseName,\n      dependencies,\n      true,\n      extraData,\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], true);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraData);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n\n  it('should allow to create an initializer from a provider builder', async () => {\n    const aServiceBuilder = async (_services: unknown) => ({\n      service: 'A_SERVICE',\n    });\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const extraData = { extra: true };\n    const baseName = 'hash';\n    const baseType = 'provider';\n    const newInitializer = provider(\n      name(\n        baseName,\n        inject(dependencies, singleton(extra(extraData, aServiceBuilder))),\n      ),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], true);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraData);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n\n  it('should fail with no provider builder', () => {\n    assert.throws(() => {\n      provider(undefined as any);\n    }, /E_NO_PROVIDER_BUILDER/);\n  });\n});\n\ndescribe('autoProvider', () => {\n  it('should detect the provider details', () => {\n    const baseInitializer = async function initializeMySQL({\n      ENV,\n    }: {\n      ENV: unknown;\n    }) {\n      return { service: ENV };\n    };\n    const newInitializer = autoProvider(baseInitializer);\n\n    assert.notEqual(newInitializer, baseInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['ENV']);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], 'mySQL');\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], 'provider');\n  });\n\n  it('should detect the provider details even with no dependencies', () => {\n    const baseInitializer = async function initializeMySQL() {\n      return { service: 'A_SERVICE' };\n    };\n    const newInitializer = autoProvider(baseInitializer);\n\n    assert.notEqual(newInitializer, baseInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], []);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], 'mySQL');\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], 'provider');\n  });\n});\n\ndescribe('handler', () => {\n  it('should work', async () => {\n    const baseName = 'sampleHandler';\n    const injectedServices = ['kikooo', 'lol'];\n    const services = {\n      kikooo: 'kikooo',\n      lol: 'lol',\n    };\n    const theInitializer = handler(sampleHandler, baseName, injectedServices);\n\n    assert.deepEqual((theInitializer as any).$name, baseName);\n    assert.deepEqual((theInitializer as any).$inject, injectedServices);\n\n    const theHandler = await theInitializer(services);\n    const result = await theHandler('test');\n    assert.deepEqual(result, {\n      deps: services,\n      args: ['test'],\n    });\n\n    async function sampleHandler(deps, ...args) {\n      return { deps, args };\n    }\n  });\n\n  it('should fail with no name', () => {\n    assert.throws(() => {\n      handler(async () => undefined);\n    }, /E_NO_HANDLER_NAME/);\n  });\n});\n\ndescribe('autoHandler', () => {\n  it('should work', async () => {\n    const services = {\n      kikooo: 'kikooo',\n      lol: 'lol',\n    };\n    const theInitializer = autoHandler(sampleHandler);\n\n    assert.deepEqual((theInitializer as any).$name, sampleHandler.name);\n    assert.deepEqual((theInitializer as any).$inject, ['kikooo', 'lol']);\n\n    const theHandler = await theInitializer(services);\n    const result = await theHandler('test');\n    assert.deepEqual(result, {\n      deps: services,\n      args: ['test'],\n    });\n\n    async function sampleHandler({ kikooo, lol }, ...args) {\n      return { deps: { kikooo, lol }, args };\n    }\n  });\n\n  it('should work with spread services', async () => {\n    const services = {\n      kikooo: 'kikooo',\n      lol: 'lol',\n    };\n    const theInitializer = autoHandler(sampleHandler);\n\n    assert.deepEqual((theInitializer as any).$name, sampleHandler.name);\n    assert.deepEqual((theInitializer as any).$inject, ['kikooo', 'lol']);\n\n    const theHandler = await theInitializer(services);\n    const result = await theHandler('test');\n    assert.deepEqual(result, {\n      deps: services,\n      args: ['test'],\n    });\n\n    async function sampleHandler({ kikooo, lol, ...services }, ...args) {\n      return { deps: { kikooo, lol, ...services }, args };\n    }\n  });\n\n  it('should fail for anonymous functions', () => {\n    assert.throws(() => {\n      autoHandler(async () => undefined);\n    }, /E_AUTO_NAMING_FAILURE/);\n  });\n});\n\ndescribe('parseDependencyDeclaration', () => {\n  it('should work', () => {\n    assert.deepEqual(parseDependencyDeclaration('db>pgsql'), {\n      serviceName: 'db',\n      mappedName: 'pgsql',\n      optional: false,\n    });\n  });\n\n  it('should work with unmapped names', () => {\n    assert.deepEqual(parseDependencyDeclaration('?pgsql'), {\n      serviceName: 'pgsql',\n      mappedName: 'pgsql',\n      optional: true,\n    });\n  });\n});\n"],"mappings":"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"}