{"version":3,"file":"util.test.js","names":["aProviderInitializer","service","aServiceInitializer","describe","it","from","to","$name","$type","$inject","$singleton","$extra","httpHandler","newFn","reuseSpecialProps","assert","notEqual","equal","deepEqual","newFn2","baseServiceInitializer","log","sinon","stub","newInitializer","wrapInitializer","newService","args","SPECIAL_PROPS","INJECT","baseInitializer","baseProviderInitializer","provider","dependencies","inject","throws","constant","fromDependencies","fromInitializer","toDependencies","toInitializer","useInject","mergeInject","baseProvider","ENV","mysql","db","autoInject","noop","undefined","debug","aDebug","foo","bar","alsoInject","parseInjections","singleton","SINGLETON","baseName","name","NAME","autoName","hash","initHash","initializeHash","extraInformations","extra","EXTRA","baseExtraInformations","yolo","additionalExtraInformations","baseType","type","TYPE","initializer","baseValue","constantInitializer","VALUE","aServiceBuilder","_services","extraData","cool","nice","baseServiceBuilder","initializeMySQL","autoService","aProviderInitializerBuilder","autoProvider","injectedServices","services","kikooo","lol","theInitializer","handler","sampleHandler","theHandler","result","deps","autoHandler","parseDependencyDeclaration","serviceName","mappedName","optional"],"sources":["../src/util.test.ts"],"sourcesContent":["import assert from 'assert';\nimport sinon from 'sinon';\nimport {\n  reuseSpecialProps,\n  wrapInitializer,\n  parseDependencyDeclaration,\n  name,\n  autoName,\n  type,\n  inject,\n  autoInject,\n  alsoInject,\n  useInject,\n  mergeInject,\n  parseInjections,\n  singleton,\n  extra,\n  initializer,\n  constant,\n  service,\n  autoService,\n  provider,\n  autoProvider,\n  handler,\n  autoHandler,\n  SPECIAL_PROPS,\n} from './util';\nimport type { PromiseValue } from 'type-fest';\nimport type { Provider } from './util';\nimport type { Dependencies, ServiceInitializer } from '.';\n\nasync function aProviderInitializer() {\n  return {\n    service: 'A_PROVIDER_SERVICE',\n  };\n}\nasync function aServiceInitializer() {\n  return 'A_PROVIDER_SERVICE';\n}\n\ndescribe('reuseSpecialProps', () => {\n  it('should work', () => {\n    // We can safely ignore coverage here since the\n    // function are here just as placeholders\n    /* istanbul ignore next */\n    async function from() {\n      return 'from';\n    }\n    /* istanbul ignore next */\n    async function to() {\n      return 'to';\n    }\n\n    from.$name = 'from';\n    from.$type = 'service';\n    from.$inject = ['ki', 'kooo', 'lol'];\n    from.$singleton = false;\n    from.$extra = { httpHandler: true };\n\n    const newFn = reuseSpecialProps(from, to);\n\n    assert.notEqual(newFn, to);\n    assert.equal((newFn as any).$name, from.$name);\n    assert.equal((newFn as any).$type, from.$type);\n    assert.notEqual((newFn as any).$inject, from.$inject);\n    assert.deepEqual((newFn as any).$inject, from.$inject);\n    assert.equal((newFn as any).$singleton, from.$singleton);\n    assert.notEqual((newFn as any).$extra, from.$extra);\n    assert.deepEqual((newFn as any).$extra, from.$extra);\n\n    const newFn2 = reuseSpecialProps(from, to, {\n      $name: 'yolo',\n    });\n\n    assert.notEqual(newFn2, to);\n    assert.equal((newFn2 as any).$name, 'yolo');\n    assert.equal((newFn2 as any).$type, from.$type);\n    assert.notEqual((newFn2 as any).$inject, from.$inject);\n    assert.deepEqual((newFn2 as any).$inject, from.$inject);\n    assert.equal((newFn2 as any).$singleton, from.$singleton);\n    assert.notEqual((newFn as any).$extra, from.$extra);\n    assert.deepEqual((newFn as any).$extra, from.$extra);\n  });\n});\n\ndescribe('wrapInitializer', () => {\n  it('should work with a service initializer', async () => {\n    async function baseServiceInitializer() {\n      return () => 'test';\n    }\n\n    const log = sinon.stub();\n    const newInitializer = wrapInitializer(\n      async ({ log }: { log: any }, service: () => string) => {\n        log('Wrapping...');\n        return () => service() + '-wrapped';\n      },\n      service(\n        baseServiceInitializer,\n        'baseServiceInitializer',\n        ['log', '?test'],\n        false,\n        {\n          httpHandler: false,\n        },\n      ),\n    );\n\n    const newService = await newInitializer({ log });\n    assert.equal(newService(), 'test-wrapped');\n    assert.deepEqual(log.args, [['Wrapping...']]);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['log', '?test']);\n  });\n\n  it('should work with a provider initialzer', async () => {\n    async function baseInitializer() {\n      return { service: () => 'test' };\n    }\n\n    const log = sinon.stub();\n    const baseProviderInitializer = provider(\n      baseInitializer,\n      'baseInitializer',\n      ['log', '?test'],\n      false,\n      {\n        httpHandler: false,\n      },\n    );\n    const newInitializer = wrapInitializer(\n      async (\n        { log }: { log: (message: string) => void },\n        service,\n      ): Promise<Provider<() => string>> => {\n        log('Wrapping...');\n        return { service: () => service.service() + '-wrapped' };\n      },\n      baseProviderInitializer,\n    );\n\n    const newService = await newInitializer({ log });\n    assert.equal(newService.service(), 'test-wrapped');\n    assert.deepEqual(log.args, [['Wrapping...']]);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['log', '?test']);\n  });\n});\n\ndescribe('inject', () => {\n  it('should allow to decorate an initializer with dependencies', () => {\n    const dependencies = ['ENV'];\n    const newInitializer = inject<{ ENV: string }, string>(\n      dependencies,\n      provider(aProviderInitializer, 'aProvider'),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer builder with dependencies', () => {\n    const dependencies = ['ENV'];\n    const newInitializer = inject<{ ENV: string }, string>(\n      dependencies,\n      aProviderInitializer,\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with dependencies', () => {\n    const dependencies = ['ENV'];\n    const newInitializer = inject<{ ENV: string }, string>(\n      dependencies,\n      service(aServiceInitializer, 'aService'),\n    );\n\n    assert.notEqual(newInitializer, aServiceInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer builder with dependencies', () => {\n    const dependencies = ['ENV'];\n    const newInitializer = inject<{ ENV: string }, string>(\n      dependencies,\n      aServiceInitializer,\n    );\n\n    assert.notEqual(newInitializer, aServiceInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with mapped dependencies', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const newInitializer = inject(dependencies, aProviderInitializer);\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should fail with a constant', () => {\n    assert.throws(() => {\n      inject(\n        ['test'],\n        constant('test', 'test') as unknown as ServiceInitializer<\n          Dependencies,\n          unknown\n        >,\n      );\n    }, /E_BAD_INJECT_IN_CONSTANT/);\n  });\n});\ndescribe('useInject', () => {\n  it('should set the right dependencies', () => {\n    const fromDependencies = ['ENV', 'CORS'];\n    const fromInitializer = inject(fromDependencies, aProviderInitializer);\n    const toDependencies = ['db', 'log'];\n    const toInitializer = inject(toDependencies, aProviderInitializer);\n    const newInitializer = useInject(fromInitializer, toInitializer);\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], fromDependencies);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], toDependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      ...fromDependencies,\n    ]);\n  });\n});\n\ndescribe('mergeInject', () => {\n  it('should amend dependencies', () => {\n    const fromDependencies = ['ENV', 'CORS'];\n    const fromInitializer = inject<\n      {\n        db: 'db';\n        log: 'log';\n      },\n      PromiseValue<ReturnType<typeof aProviderInitializer>>\n    >(fromDependencies, aProviderInitializer);\n    const toDependencies = ['db', 'log'];\n    const toInitializer = inject(toDependencies, aProviderInitializer);\n    const newInitializer = mergeInject(fromInitializer, toInitializer);\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], fromDependencies);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], toDependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      ...toDependencies,\n      ...fromDependencies,\n    ]);\n  });\n});\n\ndescribe('autoInject', () => {\n  it('should allow to decorate an initializer with dependencies', () => {\n    const baseProvider =\n      async ({ ENV, mysql: db }) =>\n      async () => ({\n        ENV,\n        db,\n      });\n    const dependencies = ['ENV', 'mysql'];\n    const newInitializer = autoInject(baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with a function name', () => {\n    async function baseProvider({ ENV, mysql: db }) {\n      async () => ({\n        ENV,\n        db,\n      });\n    }\n    const dependencies = ['ENV', 'mysql'];\n    const newInitializer = autoInject(baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with optional dependencies', () => {\n    const noop = () => undefined;\n    const baseProvider =\n      async ({ ENV, log = noop, debug: aDebug = noop }) =>\n      async () => ({\n        ENV,\n        log,\n        aDebug,\n      });\n    const dependencies = ['ENV', '?log', '?debug'];\n    const newInitializer = autoInject(baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with several arguments', () => {\n    const noop = () => undefined;\n    const baseProvider =\n      async ({ ENV, log = noop, debug: aDebug = noop }) =>\n      async () => ({\n        ENV,\n        log,\n        aDebug,\n      });\n    const dependencies = ['ENV', '?log', '?debug'];\n    const newInitializer = autoInject(baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with complex arguments', () => {\n    const noop = () => undefined;\n    const baseProvider =\n      async ({ ENV, log = noop, debug: aDebug = noop }) =>\n      async () => ({\n        ENV,\n        log,\n        aDebug,\n      });\n    const dependencies = ['ENV', '?log', '?debug'];\n    const newInitializer = autoInject(baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should fail with non async initializers', () => {\n    assert.throws(() => {\n      autoInject((({ foo: bar = { bar: 'foo' } }) => {\n        return bar;\n      }) as any);\n    }, /E_NON_ASYNC_INITIALIZER/);\n  });\n\n  it('should fail with too complex injections', () => {\n    assert.throws(() => {\n      autoInject(async ({ foo: bar = { bar: 'foo' } }) => {\n        return bar;\n      });\n    }, /E_AUTO_INJECTION_FAILURE/);\n  });\n\n  it('should fail with no injections', () => {\n    assert.throws(() => {\n      autoInject(async () => undefined);\n    }, /E_AUTO_INJECTION_FAILURE/);\n  });\n});\n\ndescribe('alsoInject', () => {\n  it('should allow to decorate an initializer with dependencies', () => {\n    const newInitializer = alsoInject(\n      ['ENV'],\n      inject(['TEST'], aProviderInitializer),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['TEST', 'ENV']);\n  });\n\n  it('should allow to decorate an initializer with dependencies', () => {\n    const newInitializer = alsoInject(['ENV'], aProviderInitializer);\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['ENV']);\n  });\n\n  it('should dedupe dependencies', () => {\n    const baseProvider = inject(['?TEST'], aProviderInitializer);\n    const newInitializer = alsoInject(\n      ['ENV', '?NODE_ENV', '?TEST', 'TEST2', 'db>mysql'],\n      alsoInject(['ENV', 'NODE_ENV', '?TEST', '?TEST2', 'mysql'], baseProvider),\n    );\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      'mysql',\n      'ENV',\n      'NODE_ENV',\n      '?TEST',\n      'TEST2',\n      'db>mysql',\n    ]);\n  });\n\n  it('should preserve single optional dependencies', () => {\n    const baseProvider = inject(['ENV', '?TEST'], aProviderInitializer);\n    const newInitializer = alsoInject(\n      ['ENV', '?TEST2'],\n      alsoInject(['ENV', '?TEST3'], baseProvider),\n    );\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      '?TEST',\n      '?TEST3',\n      'ENV',\n      '?TEST2',\n    ]);\n  });\n\n  it('should preserve mapped dependencies', () => {\n    const baseProvider = inject(['mysql', '?sftp'], aProviderInitializer);\n    const newInitializer = alsoInject(['db>mysql', '?ftp>sftp'], baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      'mysql',\n      '?sftp',\n      'db>mysql',\n      '?ftp>sftp',\n    ]);\n  });\n\n  it('should solve dependencies alias name clash', () => {\n    const baseProvider = inject(['?TEST'], aProviderInitializer);\n    const newInitializer = alsoInject(\n      ['ENV', '?NODE_ENV', '?TEST', 'db>mysql', '?log>logly'],\n      alsoInject(\n        ['ENV', 'NODE_ENV', '?TEST', 'db>pg', '?log>logger'],\n        baseProvider,\n      ),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      'ENV',\n      'NODE_ENV',\n      '?TEST',\n      'db>mysql',\n      '?log>logly',\n    ]);\n  });\n\n  it('should solve dependencies alias name clash', () => {\n    const baseProvider = inject(['?TEST'], aProviderInitializer);\n    const newInitializer = alsoInject(\n      ['ENV', '?NODE_ENV', '?TEST', 'db>mysql', '?log>logly'],\n      alsoInject(\n        ['ENV', 'NODE_ENV', '?TEST', 'db>pg', '?log>logger'],\n        baseProvider,\n      ),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      'ENV',\n      'NODE_ENV',\n      '?TEST',\n      'db>mysql',\n      '?log>logly',\n    ]);\n  });\n});\n\ndescribe('parseInjections', () => {\n  it('should work with TypeScript dependencies', () => {\n    assert.deepEqual(\n      parseInjections(`async function initNexmo({\n      ENV,\n      NEXMO,\n      log = noop,\n    }: {\n      ENV: any;\n      NEXMO: any;\n      log: Function;\n    }): Promise<SMSService> {}`),\n      ['ENV', 'NEXMO', '?log'],\n    );\n  });\n\n  it('should allow to decorate an initializer with dependencies', () => {\n    const newInitializer = alsoInject(['ENV'], aProviderInitializer);\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['ENV']);\n  });\n});\n\ndescribe('singleton', () => {\n  it('should allow to decorate an initializer with singleton option', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const newInitializer = inject(\n      dependencies,\n      singleton(aProviderInitializer, true),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], true);\n  });\n\n  it('should allow to be used several times', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const newInitializer = inject(\n      dependencies,\n      singleton(singleton(aProviderInitializer), false),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], false);\n  });\n});\n\ndescribe('name', () => {\n  it('should allow to decorate an initializer with a name', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseName = 'hash';\n    const newInitializer = inject(\n      dependencies,\n      name(baseName, aProviderInitializer),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n  });\n});\n\ndescribe('autoName', () => {\n  it('should allow to decorate an initializer with its function name', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseName = 'hash';\n    const newInitializer = inject(\n      dependencies,\n      autoName(async function hash() {\n        return undefined;\n      }),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n  });\n\n  it('should allow to decorate an initializer with its init like function name', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseName = 'hash';\n    const newInitializer = inject(\n      dependencies,\n      autoName(async function initHash() {\n        return undefined;\n      }),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n  });\n\n  it('should allow to decorate an initializer with its initialize like function name', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseName = 'hash';\n    const newInitializer = inject(\n      dependencies,\n      autoName(async function initializeHash() {\n        return undefined;\n      }),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n  });\n\n  it('should allow to decorate a bounded initializer', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseName = 'hash';\n    const newInitializer = autoName(\n      inject(\n        dependencies,\n        singleton(async function initializeHash() {\n          return undefined;\n        }),\n      ),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], true);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n  });\n\n  it('should fail with anonymous functions', () => {\n    assert.throws(() => {\n      autoName(async () => undefined);\n    }, /E_AUTO_NAMING_FAILURE/);\n  });\n});\n\ndescribe('extra', () => {\n  it('should allow to decorate an initializer with extra infos', () => {\n    const extraInformations = { httpHandler: true };\n    const newInitializer = extra(extraInformations, aProviderInitializer);\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraInformations);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraInformations);\n  });\n\n  it('should allow to decorate an initializer with extra infos', () => {\n    const extraInformations = { httpHandler: true };\n    const newInitializer = extra(extraInformations, aProviderInitializer, true);\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraInformations);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraInformations);\n  });\n\n  it('should allow to decorate an initializer with additional extra infos', () => {\n    const baseExtraInformations = { yolo: true, httpHandler: false };\n    const additionalExtraInformations = { httpHandler: true };\n    const newInitializer = extra(\n      baseExtraInformations,\n      extra(additionalExtraInformations, aProviderInitializer),\n      true,\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.EXTRA], baseExtraInformations);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.EXTRA], baseExtraInformations);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], {\n      ...baseExtraInformations,\n      ...baseExtraInformations,\n    });\n  });\n});\n\ndescribe('type', () => {\n  it('should allow to decorate an initializer with a type', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseName = 'hash';\n    const baseType = 'service';\n    const newInitializer = inject(\n      dependencies,\n      name(baseName, type(baseType, aProviderInitializer)),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n});\n\ndescribe('initializer', () => {\n  it('should allow to decorate an initializer with every properties', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseName = 'hash';\n    const baseType = 'service';\n    const newInitializer = initializer(\n      {\n        type: baseType,\n        inject: dependencies,\n        singleton: true,\n        name: baseName,\n      },\n      aServiceInitializer,\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], true);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n\n  it('should fail with bad properties', () => {\n    assert.throws(() => {\n      initializer(\n        {\n          name: 'yolo',\n          yolo: '',\n        } as any,\n        async () => undefined,\n      );\n    }, /E_BAD_PROPERTY/);\n  });\n});\n\ndescribe('constant', () => {\n  it('should allow to create an initializer from a constant', async () => {\n    const baseName = 'THE_VALUE';\n    const baseValue = 42;\n    const constantInitializer = constant(baseName, baseValue);\n\n    assert.equal(constantInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(constantInitializer[SPECIAL_PROPS.TYPE], 'constant');\n    assert.equal(constantInitializer[SPECIAL_PROPS.VALUE], baseValue);\n  });\n\n  it('should fail with dependencies since it makes no sense', () => {\n    assert.throws(() => {\n      constant(\n        'time',\n        inject(['hash3'], async () => undefined),\n      );\n    }, /E_CONSTANT_INJECTION/);\n  });\n});\n\ndescribe('service', () => {\n  it('should allow to create an initializer from a service builder', async () => {\n    const aServiceBuilder = async (_services: unknown) => 'A_SERVICE';\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const extraData = { cool: true };\n    const baseName = 'hash';\n    const baseType = 'service';\n    const newInitializer = service(\n      aServiceBuilder,\n      baseName,\n      dependencies,\n      true,\n      extraData,\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], true);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraData);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n\n  it('should allow to create an initializer from a generic service builder', async () => {\n    const aServiceBuilder = async <T>(_services: T) => '';\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const extraData = { nice: true };\n    const baseName = 'hash';\n    const baseType = 'service';\n    const newInitializer = service(\n      aServiceBuilder,\n      baseName,\n      dependencies,\n      true,\n      extraData,\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], true);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraData);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n\n  it('should fail with no service builder', () => {\n    assert.throws(() => {\n      service(undefined as any);\n    }, /E_NO_SERVICE_BUILDER/);\n  });\n});\n\ndescribe('autoService', () => {\n  it('should detect the service details', () => {\n    const baseServiceBuilder = async function initializeMySQL({ ENV }) {\n      return ENV;\n    };\n    const newInitializer = autoService(baseServiceBuilder);\n\n    assert.notEqual(newInitializer, baseServiceBuilder);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['ENV']);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], 'mySQL');\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], 'service');\n  });\n\n  it('should detect the service details even with no dependencies', () => {\n    const baseServiceBuilder = async function initializeMySQL() {\n      return;\n    };\n    const newInitializer = autoService(baseServiceBuilder);\n\n    assert.notEqual(newInitializer, baseServiceBuilder);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], []);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], 'mySQL');\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], 'service');\n  });\n});\n\ndescribe('provider', () => {\n  it('should allow to create an initializer from a provider builder', async () => {\n    const aProviderInitializerBuilder = async () => ({ service: 'A_SERVICE' });\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const extraData = { singleton: true };\n    const baseName = 'hash';\n    const baseType = 'provider';\n    const newInitializer = provider(\n      aProviderInitializerBuilder,\n      baseName,\n      dependencies,\n      true,\n      extraData,\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], true);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraData);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n\n  it('should allow to create an initializer from a provider builder', async () => {\n    const aServiceBuilder = async (_services: unknown) => ({\n      service: 'A_SERVICE',\n    });\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const extraData = { extra: true };\n    const baseName = 'hash';\n    const baseType = 'provider';\n    const newInitializer = provider(\n      name(\n        baseName,\n        inject(dependencies, singleton(extra(extraData, aServiceBuilder))),\n      ),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], true);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraData);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n\n  it('should fail with no provider builder', () => {\n    assert.throws(() => {\n      provider(undefined as any);\n    }, /E_NO_PROVIDER_BUILDER/);\n  });\n});\n\ndescribe('autoProvider', () => {\n  it('should detect the provider details', () => {\n    const baseInitializer = async function initializeMySQL({\n      ENV,\n    }: {\n      ENV: unknown;\n    }) {\n      return { service: ENV };\n    };\n    const newInitializer = autoProvider(baseInitializer);\n\n    assert.notEqual(newInitializer, baseInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['ENV']);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], 'mySQL');\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], 'provider');\n  });\n\n  it('should detect the provider details even with no dependencies', () => {\n    const baseInitializer = async function initializeMySQL() {\n      return { service: 'A_SERVICE' };\n    };\n    const newInitializer = autoProvider(baseInitializer);\n\n    assert.notEqual(newInitializer, baseInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], []);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], 'mySQL');\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], 'provider');\n  });\n});\n\ndescribe('handler', () => {\n  it('should work', async () => {\n    const baseName = 'sampleHandler';\n    const injectedServices = ['kikooo', 'lol'];\n    const services = {\n      kikooo: 'kikooo',\n      lol: 'lol',\n    };\n    const theInitializer = handler(sampleHandler, baseName, injectedServices);\n\n    assert.deepEqual((theInitializer as any).$name, baseName);\n    assert.deepEqual((theInitializer as any).$inject, injectedServices);\n\n    const theHandler = await theInitializer(services);\n    const result = await theHandler('test');\n    assert.deepEqual(result, {\n      deps: services,\n      args: ['test'],\n    });\n\n    async function sampleHandler(deps, ...args) {\n      return { deps, args };\n    }\n  });\n\n  it('should fail with no name', () => {\n    assert.throws(() => {\n      handler(async () => undefined);\n    }, /E_NO_HANDLER_NAME/);\n  });\n});\n\ndescribe('autoHandler', () => {\n  it('should work', async () => {\n    const services = {\n      kikooo: 'kikooo',\n      lol: 'lol',\n    };\n    const theInitializer = autoHandler(sampleHandler);\n\n    assert.deepEqual((theInitializer as any).$name, sampleHandler.name);\n    assert.deepEqual((theInitializer as any).$inject, ['kikooo', 'lol']);\n\n    const theHandler = await theInitializer(services);\n    const result = await theHandler('test');\n    assert.deepEqual(result, {\n      deps: services,\n      args: ['test'],\n    });\n\n    async function sampleHandler({ kikooo, lol }, ...args) {\n      return { deps: { kikooo, lol }, args };\n    }\n  });\n\n  it('should work with spread services', async () => {\n    const services = {\n      kikooo: 'kikooo',\n      lol: 'lol',\n    };\n    const theInitializer = autoHandler(sampleHandler);\n\n    assert.deepEqual((theInitializer as any).$name, sampleHandler.name);\n    assert.deepEqual((theInitializer as any).$inject, ['kikooo', 'lol']);\n\n    const theHandler = await theInitializer(services);\n    const result = await theHandler('test');\n    assert.deepEqual(result, {\n      deps: services,\n      args: ['test'],\n    });\n\n    async function sampleHandler({ kikooo, lol, ...services }, ...args) {\n      return { deps: { kikooo, lol, ...services }, args };\n    }\n  });\n\n  it('should fail for anonymous functions', () => {\n    assert.throws(() => {\n      autoHandler(async () => undefined);\n    }, /E_AUTO_NAMING_FAILURE/);\n  });\n});\n\ndescribe('parseDependencyDeclaration', () => {\n  it('should work', () => {\n    assert.deepEqual(parseDependencyDeclaration('db>pgsql'), {\n      serviceName: 'db',\n      mappedName: 'pgsql',\n      optional: false,\n    });\n  });\n\n  it('should work with unmapped names', () => {\n    assert.deepEqual(parseDependencyDeclaration('?pgsql'), {\n      serviceName: 'pgsql',\n      mappedName: 'pgsql',\n      optional: true,\n    });\n  });\n});\n"],"mappings":"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"}