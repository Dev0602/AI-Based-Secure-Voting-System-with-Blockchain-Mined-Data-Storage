{"version":3,"file":"random.test.mjs","names":["Knifecycle","constant","initRandomService","describe","log","jest","fn","beforeEach","mockReset","test","done","then","random","expect","mock","calls","toMatchInlineSnapshot","catch","mockClear","num","toEqual","register","run","toBeDefined"],"sources":["../src/random.test.ts"],"sourcesContent":["import Knifecycle, { constant } from 'knifecycle';\nimport initRandomService from './random';\n\ndescribe('initRandomService', () => {\n  const log = jest.fn();\n\n  beforeEach(() => {\n    log.mockReset();\n  });\n\n  test('should work', (done) => {\n    initRandomService({\n      log,\n    })\n      .then((random) => {\n        expect('function' === typeof random);\n        expect(log.mock.calls).toMatchInlineSnapshot(`\n          Array [\n            Array [\n              \"debug\",\n              \"ðŸŽ² - Random service initialized.\",\n            ],\n          ]\n        `);\n      })\n      .then(() => done())\n      .catch(done);\n  });\n\n  describe('random', () => {\n    test('should work', (done) => {\n      initRandomService({\n        log,\n      })\n        .then((random) => {\n          log.mockClear();\n          const num = random();\n\n          expect(log.mock.calls).toEqual([\n            ['debug', 'ðŸŽ² - Created a random number:', num],\n          ]);\n        })\n        .then(() => done())\n        .catch(done);\n    });\n  });\n\n  test('should work with Knifecycle', (done) => {\n    new Knifecycle()\n      .register(initRandomService)\n      .register(constant('log', log))\n      .run(['random'])\n      .then(({ random }) => {\n        expect(random).toBeDefined();\n        expect(log.mock.calls).toMatchInlineSnapshot(`\n          Array [\n            Array [\n              \"debug\",\n              \"ðŸŽ² - Random service initialized.\",\n            ],\n          ]\n        `);\n      })\n      .then(() => done())\n      .catch(done);\n  });\n});\n"],"mappings":"AAAA,OAAOA,UAAP,IAAqBC,QAArB,QAAqC,YAArC;AACA,OAAOC,iBAAP,MAA8B,UAA9B;AAEAC,QAAQ,CAAC,mBAAD,EAAsB,MAAM;EAClC,MAAMC,GAAG,GAAGC,IAAI,CAACC,EAAL,EAAZ;EAEAC,UAAU,CAAC,MAAM;IACfH,GAAG,CAACI,SAAJ;EACD,CAFS,CAAV;EAIAC,IAAI,CAAC,aAAD,EAAiBC,IAAD,IAAU;IAC5BR,iBAAiB,CAAC;MAChBE;IADgB,CAAD,CAAjB,CAGGO,IAHH,CAGSC,MAAD,IAAY;MAChBC,MAAM,CAAC,eAAe,OAAOD,MAAvB,CAAN;MACAC,MAAM,CAACT,GAAG,CAACU,IAAJ,CAASC,KAAV,CAAN,CAAuBC,qBAAvB,CAA8C;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,SAPQ;IAQD,CAbH,EAcGL,IAdH,CAcQ,MAAMD,IAAI,EAdlB,EAeGO,KAfH,CAeSP,IAfT;EAgBD,CAjBG,CAAJ;EAmBAP,QAAQ,CAAC,QAAD,EAAW,MAAM;IACvBM,IAAI,CAAC,aAAD,EAAiBC,IAAD,IAAU;MAC5BR,iBAAiB,CAAC;QAChBE;MADgB,CAAD,CAAjB,CAGGO,IAHH,CAGSC,MAAD,IAAY;QAChBR,GAAG,CAACc,SAAJ;QACA,MAAMC,GAAG,GAAGP,MAAM,EAAlB;QAEAC,MAAM,CAACT,GAAG,CAACU,IAAJ,CAASC,KAAV,CAAN,CAAuBK,OAAvB,CAA+B,CAC7B,CAAC,OAAD,EAAU,+BAAV,EAA2CD,GAA3C,CAD6B,CAA/B;MAGD,CAVH,EAWGR,IAXH,CAWQ,MAAMD,IAAI,EAXlB,EAYGO,KAZH,CAYSP,IAZT;IAaD,CAdG,CAAJ;EAeD,CAhBO,CAAR;EAkBAD,IAAI,CAAC,6BAAD,EAAiCC,IAAD,IAAU;IAC5C,IAAIV,UAAJ,GACGqB,QADH,CACYnB,iBADZ,EAEGmB,QAFH,CAEYpB,QAAQ,CAAC,KAAD,EAAQG,GAAR,CAFpB,EAGGkB,GAHH,CAGO,CAAC,QAAD,CAHP,EAIGX,IAJH,CAIQ,CAAC;MAAEC;IAAF,CAAD,KAAgB;MACpBC,MAAM,CAACD,MAAD,CAAN,CAAeW,WAAf;MACAV,MAAM,CAACT,GAAG,CAACU,IAAJ,CAASC,KAAV,CAAN,CAAuBC,qBAAvB,CAA8C;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,SAPQ;IAQD,CAdH,EAeGL,IAfH,CAeQ,MAAMD,IAAI,EAflB,EAgBGO,KAhBH,CAgBSP,IAhBT;EAiBD,CAlBG,CAAJ;AAmBD,CA/DO,CAAR"}