{"version":3,"file":"random.test.js","names":["describe","log","jest","fn","beforeEach","mockReset","test","done","initRandomService","then","random","expect","mock","calls","toMatchInlineSnapshot","catch","mockClear","num","toEqual","Knifecycle","register","constant","run","toBeDefined"],"sources":["../src/random.test.ts"],"sourcesContent":["import Knifecycle, { constant } from 'knifecycle';\nimport initRandomService from './random';\n\ndescribe('initRandomService', () => {\n  const log = jest.fn();\n\n  beforeEach(() => {\n    log.mockReset();\n  });\n\n  test('should work', (done) => {\n    initRandomService({\n      log,\n    })\n      .then((random) => {\n        expect('function' === typeof random);\n        expect(log.mock.calls).toMatchInlineSnapshot(`\n          Array [\n            Array [\n              \"debug\",\n              \"ðŸŽ² - Random service initialized.\",\n            ],\n          ]\n        `);\n      })\n      .then(() => done())\n      .catch(done);\n  });\n\n  describe('random', () => {\n    test('should work', (done) => {\n      initRandomService({\n        log,\n      })\n        .then((random) => {\n          log.mockClear();\n          const num = random();\n\n          expect(log.mock.calls).toEqual([\n            ['debug', 'ðŸŽ² - Created a random number:', num],\n          ]);\n        })\n        .then(() => done())\n        .catch(done);\n    });\n  });\n\n  test('should work with Knifecycle', (done) => {\n    new Knifecycle()\n      .register(initRandomService)\n      .register(constant('log', log))\n      .run(['random'])\n      .then(({ random }) => {\n        expect(random).toBeDefined();\n        expect(log.mock.calls).toMatchInlineSnapshot(`\n          Array [\n            Array [\n              \"debug\",\n              \"ðŸŽ² - Random service initialized.\",\n            ],\n          ]\n        `);\n      })\n      .then(() => done())\n      .catch(done);\n  });\n});\n"],"mappings":";;AAAA;;AACA;;;;;;;;AAEAA,QAAQ,CAAC,mBAAD,EAAsB,MAAM;EAClC,MAAMC,GAAG,GAAGC,IAAI,CAACC,EAAL,EAAZ;EAEAC,UAAU,CAAC,MAAM;IACfH,GAAG,CAACI,SAAJ;EACD,CAFS,CAAV;EAIAC,IAAI,CAAC,aAAD,EAAiBC,IAAD,IAAU;IAC5B,IAAAC,eAAA,EAAkB;MAChBP;IADgB,CAAlB,EAGGQ,IAHH,CAGSC,MAAD,IAAY;MAChBC,MAAM,CAAC,eAAe,OAAOD,MAAvB,CAAN;MACAC,MAAM,CAACV,GAAG,CAACW,IAAJ,CAASC,KAAV,CAAN,CAAuBC,qBAAvB,CAA8C;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,SAPQ;IAQD,CAbH,EAcGL,IAdH,CAcQ,MAAMF,IAAI,EAdlB,EAeGQ,KAfH,CAeSR,IAfT;EAgBD,CAjBG,CAAJ;EAmBAP,QAAQ,CAAC,QAAD,EAAW,MAAM;IACvBM,IAAI,CAAC,aAAD,EAAiBC,IAAD,IAAU;MAC5B,IAAAC,eAAA,EAAkB;QAChBP;MADgB,CAAlB,EAGGQ,IAHH,CAGSC,MAAD,IAAY;QAChBT,GAAG,CAACe,SAAJ;QACA,MAAMC,GAAG,GAAGP,MAAM,EAAlB;QAEAC,MAAM,CAACV,GAAG,CAACW,IAAJ,CAASC,KAAV,CAAN,CAAuBK,OAAvB,CAA+B,CAC7B,CAAC,OAAD,EAAU,+BAAV,EAA2CD,GAA3C,CAD6B,CAA/B;MAGD,CAVH,EAWGR,IAXH,CAWQ,MAAMF,IAAI,EAXlB,EAYGQ,KAZH,CAYSR,IAZT;IAaD,CAdG,CAAJ;EAeD,CAhBO,CAAR;EAkBAD,IAAI,CAAC,6BAAD,EAAiCC,IAAD,IAAU;IAC5C,IAAIY,mBAAJ,GACGC,QADH,CACYZ,eADZ,EAEGY,QAFH,CAEY,IAAAC,oBAAA,EAAS,KAAT,EAAgBpB,GAAhB,CAFZ,EAGGqB,GAHH,CAGO,CAAC,QAAD,CAHP,EAIGb,IAJH,CAIQ,CAAC;MAAEC;IAAF,CAAD,KAAgB;MACpBC,MAAM,CAACD,MAAD,CAAN,CAAea,WAAf;MACAZ,MAAM,CAACV,GAAG,CAACW,IAAJ,CAASC,KAAV,CAAN,CAAuBC,qBAAvB,CAA8C;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,SAPQ;IAQD,CAdH,EAeGL,IAfH,CAeQ,MAAMF,IAAI,EAflB,EAgBGQ,KAhBH,CAgBSR,IAhBT;EAiBD,CAlBG,CAAJ;AAmBD,CA/DO,CAAR"}