{"version":3,"file":"delay.js","names":["noop","undefined","singleton","autoProvider","initDelay","log","pendingPromises","Map","service","create","clear","dispose","delay","timeoutId","_reject","promise","Promise","resolve","reject","setTimeout","delete","set","has","YError","get","clearTimeout","size","all","keys","map"],"sources":["../src/delay.ts"],"sourcesContent":["import YError from 'yerror';\nimport { autoProvider, singleton } from 'knifecycle';\nimport type { LogService } from './log';\n\nfunction noop(): void {\n  return undefined;\n}\n\nexport interface DelayProvider {\n  service: DelayService;\n  dispose: () => Promise<void>;\n}\nexport interface DelayService {\n  create: (delay: number) => Promise<void>;\n  clear: (promise: Promise<void>) => Promise<void>;\n}\n\n/* Architecture Note #1.4: Delaying\n\nThe delay service is `setTimeout` like I would like it\n to be.\n*/\n\nexport default singleton(autoProvider(initDelay));\n\n/**\n * Instantiate the delay service\n * @name initDelay\n * @function\n * @param  {Object}     services\n * The services to inject\n * @param  {Function}   [services.log=noop]\n * A logging function\n * @return {Promise<Object>}\n * A promise of the delay service\n * @example\n * import initDelay from 'common-services/dist/delay';\n *\n * const delay = await initDelay({\n *   log: console.log.bind(console)\n * });\n */\nasync function initDelay({\n  log = noop,\n}: {\n  log?: LogService;\n}): Promise<DelayProvider> {\n  const pendingPromises = new Map();\n\n  log('debug', '⌛ - Delay service initialized.');\n\n  return {\n    service: {\n      create,\n      clear,\n    },\n    dispose,\n  };\n\n  /**\n   * Create a new delay\n   * @param  {Number}   delay  The delay in ms\n   * @return {Promise}\n   * A promise to be resolved after that delay\n   * or rejected if it is cancelled.\n   * @example\n   * await delay.create(1000);\n   * console.log('1000 ms elapsed!');\n   */\n  function create(delay: number): Promise<void> {\n    let timeoutId;\n    let _reject;\n    const promise: Promise<void> = new Promise((resolve, reject) => {\n      _reject = reject;\n      timeoutId = setTimeout(() => {\n        resolve();\n        pendingPromises.delete(promise);\n      }, delay);\n    });\n\n    pendingPromises.set(promise, {\n      timeoutId,\n      reject: _reject,\n    });\n    log('debug', '⏳ - Created a delay:', delay);\n    return promise;\n  }\n\n  /**\n   * Cancel an earlier created delay\n   * @param  {Promise}   promise\n   * The promise of the delay to cancel\n   * @return {Promise}\n   * A promise resolved when cancellation is done.\n   * @example\n   * try {\n   *   const delayPromise = delay.create(1000);\n   *   await Promise.all(delayPromise, delay.clear(delayPromise));\n   *   console.log('1000 ms elapsed!');\n   * } catch (err) {\n   *   if(err.code != 'E_DELAY_CLEARED') {\n   *     trow err;\n   *   }\n   *   console.log('Cancelled!'));\n   * }\n   * // Prints: Cancelled!\n   */\n  async function clear(promise) {\n    if (!pendingPromises.has(promise)) {\n      return Promise.reject(new YError('E_BAD_DELAY'));\n    }\n    const { timeoutId, reject } = pendingPromises.get(promise);\n\n    clearTimeout(timeoutId);\n    reject(new YError('E_DELAY_CLEARED'));\n    pendingPromises.delete(promise);\n    log('debug', '⏳ - Cleared a delay');\n  }\n\n  async function dispose(): Promise<void> {\n    await new Promise((resolve) => {\n      log('debug', '⏳ - Cancelling pending timeouts:', pendingPromises.size);\n      resolve(Promise.all([...pendingPromises.keys()].map(clear)));\n    });\n  }\n}\n"],"mappings":";;;;;;;AAAA;;AACA;;;;AAGA,SAASA,IAAT,GAAsB;EACpB,OAAOC,SAAP;AACD;;AAWD;AACA;AACA;AACA;AACA;eAEe,IAAAC,qBAAA,EAAU,IAAAC,oBAAA,EAAaC,SAAb,oBAAV,C;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA,eAAeA,SAAf,CAAyB;EACvBC,GAAG,GAAGL;AADiB,CAAzB,EAI2B;EACzB,MAAMM,eAAe,GAAG,IAAIC,GAAJ,EAAxB;EAEAF,GAAG,CAAC,OAAD,EAAU,gCAAV,CAAH;EAEA,OAAO;IACLG,OAAO,EAAE;MACPC,MADO;MAEPC;IAFO,CADJ;IAKLC;EALK,CAAP;EAQA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,SAASF,MAAT,CAAgBG,KAAhB,EAA8C;IAC5C,IAAIC,SAAJ;;IACA,IAAIC,OAAJ;;IACA,MAAMC,OAAsB,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MAC9DJ,OAAO,GAAGI,MAAV;MACAL,SAAS,GAAGM,UAAU,CAAC,MAAM;QAC3BF,OAAO;QACPX,eAAe,CAACc,MAAhB,CAAuBL,OAAvB;MACD,CAHqB,EAGnBH,KAHmB,CAAtB;IAID,CAN8B,CAA/B;IAQAN,eAAe,CAACe,GAAhB,CAAoBN,OAApB,EAA6B;MAC3BF,SAD2B;MAE3BK,MAAM,EAAEJ;IAFmB,CAA7B;IAIAT,GAAG,CAAC,OAAD,EAAU,sBAAV,EAAkCO,KAAlC,CAAH;IACA,OAAOG,OAAP;EACD;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACE,eAAeL,KAAf,CAAqBK,OAArB,EAA8B;IAC5B,IAAI,CAACT,eAAe,CAACgB,GAAhB,CAAoBP,OAApB,CAAL,EAAmC;MACjC,OAAOC,OAAO,CAACE,MAAR,CAAe,IAAIK,eAAJ,CAAW,aAAX,CAAf,CAAP;IACD;;IACD,MAAM;MAAEV,SAAF;MAAaK;IAAb,IAAwBZ,eAAe,CAACkB,GAAhB,CAAoBT,OAApB,CAA9B;IAEAU,YAAY,CAACZ,SAAD,CAAZ;IACAK,MAAM,CAAC,IAAIK,eAAJ,CAAW,iBAAX,CAAD,CAAN;IACAjB,eAAe,CAACc,MAAhB,CAAuBL,OAAvB;IACAV,GAAG,CAAC,OAAD,EAAU,qBAAV,CAAH;EACD;;EAED,eAAeM,OAAf,GAAwC;IACtC,MAAM,IAAIK,OAAJ,CAAaC,OAAD,IAAa;MAC7BZ,GAAG,CAAC,OAAD,EAAU,kCAAV,EAA8CC,eAAe,CAACoB,IAA9D,CAAH;MACAT,OAAO,CAACD,OAAO,CAACW,GAAR,CAAY,CAAC,GAAGrB,eAAe,CAACsB,IAAhB,EAAJ,EAA4BC,GAA5B,CAAgCnB,KAAhC,CAAZ,CAAD,CAAP;IACD,CAHK,CAAN;EAID;AACF"}