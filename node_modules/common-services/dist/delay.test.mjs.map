{"version":3,"file":"delay.test.mjs","names":["Knifecycle","constant","initDelayService","describe","log","jest","fn","beforeEach","mockReset","test","delay","expect","service","create","clear","dispose","mock","calls","toMatchInlineSnapshot","setTimeoutStub","spyOn","global","afterEach","mockClear","delayPromise","length","toEqual","clearTimeoutStub","Promise","resolve","catch","err","code","all","register","run"],"sources":["../src/delay.test.ts"],"sourcesContent":["/* eslint max-nested-callbacks:0 */\nimport Knifecycle, { constant } from 'knifecycle';\nimport initDelayService from './delay';\n\ndescribe('initDelayService', () => {\n  const log = jest.fn();\n\n  beforeEach(() => {\n    log.mockReset();\n  });\n\n  test('should work', async () => {\n    const delay = await initDelayService({\n      log,\n    });\n\n    expect('function' === typeof delay.service.create);\n    expect('function' === typeof delay.service.clear);\n    expect('function' === typeof delay.dispose);\n    expect(log.mock.calls).toMatchInlineSnapshot(`\n      Array [\n        Array [\n          \"debug\",\n          \"⌛ - Delay service initialized.\",\n        ],\n      ]\n    `);\n  });\n\n  describe('delay.create', () => {\n    let setTimeoutStub;\n\n    beforeEach(() => {\n      setTimeoutStub = jest.spyOn(global, 'setTimeout');\n    });\n\n    afterEach(() => {\n      setTimeoutStub.mockClear();\n    });\n\n    test('should work', async () => {\n      const { service: delay } = await initDelayService({\n        log,\n      });\n\n      log.mockReset();\n\n      const delayPromise = delay.create(1000);\n\n      expect(setTimeoutStub.mock.calls.length).toEqual(1);\n      expect(setTimeoutStub.mock.calls[0][1]).toEqual(1000);\n      expect(log.mock.calls).toMatchInlineSnapshot(`\n        Array [\n          Array [\n            \"debug\",\n            \"⏳ - Created a delay:\",\n            1000,\n          ],\n        ]\n      `);\n      // Run set callback\n      setTimeoutStub.mock.calls[0][0]();\n\n      await delayPromise;\n    });\n  });\n\n  describe('delay.clear', () => {\n    let setTimeoutStub;\n    let clearTimeoutStub;\n\n    beforeEach(() => {\n      setTimeoutStub = jest.spyOn(global, 'setTimeout');\n      clearTimeoutStub = jest.spyOn(global, 'clearTimeout');\n    });\n\n    afterEach(() => {\n      setTimeoutStub.mockClear();\n      clearTimeoutStub.mockClear();\n    });\n\n    test('should fail with bad promise', async () => {\n      const { service: delay } = await initDelayService({\n        log,\n      });\n\n      log.mockReset();\n\n      await delay.clear(Promise.resolve()).catch((err) => {\n        expect(err.code).toEqual('E_BAD_DELAY');\n      });\n    });\n\n    test('should work', async () => {\n      const { service: delay } = await initDelayService({\n        log,\n      });\n      const delayPromise = delay.create(10000);\n\n      await Promise.resolve();\n\n      log.mockReset();\n\n      await Promise.all([\n        delay.clear(delayPromise),\n        delayPromise.catch((err) => {\n          expect(err.code).toEqual('E_DELAY_CLEARED');\n        }),\n      ]);\n      expect(log.mock.calls).toMatchInlineSnapshot(`\n        Array [\n          Array [\n            \"debug\",\n            \"⏳ - Cleared a delay\",\n          ],\n        ]\n      `);\n    });\n  });\n\n  test('should work with Knifecycle', async () => {\n    const { delay } = await new Knifecycle()\n      .register(initDelayService)\n      .register(constant('log', log))\n      .run(['delay']);\n\n    expect(delay);\n    expect(log.mock.calls).toMatchInlineSnapshot(`\n      Array [\n        Array [\n          \"debug\",\n          \"⌛ - Delay service initialized.\",\n        ],\n      ]\n    `);\n  });\n});\n"],"mappings":"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"}