{"version":3,"file":"time.test.js","names":["describe","log","jest","fn","beforeEach","mockReset","test","done","initTimeService","then","time","expect","mock","calls","toMatchInlineSnapshot","catch","mockClear","now","toEqual","Knifecycle","register","constant","run","toBeDefined"],"sources":["../src/time.test.ts"],"sourcesContent":["import Knifecycle, { constant } from 'knifecycle';\nimport initTimeService from './time';\n\ndescribe('initTimeService', () => {\n  const log = jest.fn();\n\n  beforeEach(() => {\n    log.mockReset();\n  });\n\n  test('should work', (done) => {\n    initTimeService({\n      log,\n    })\n      .then((time) => {\n        expect('function' === typeof time);\n        expect(log.mock.calls).toMatchInlineSnapshot(`\n          Array [\n            Array [\n              \"debug\",\n              \"⏰ - Time service initialized.\",\n            ],\n          ]\n        `);\n      })\n      .then(() => done())\n      .catch(done);\n  });\n\n  describe('time', () => {\n    test('should work', (done) => {\n      initTimeService({\n        log,\n      })\n        .then((time) => {\n          log.mockClear();\n\n          const now = time();\n\n          expect(log.mock.calls).toEqual([\n            ['debug', '⏰ - Picked a timestamp:', now],\n          ]);\n        })\n        .then(() => done())\n        .catch(done);\n    });\n  });\n\n  test('should work with Knifecycle', (done) => {\n    new Knifecycle()\n      .register(initTimeService)\n      .register(constant('log', log))\n      .run(['time'])\n      .then(({ time }) => {\n        expect(time).toBeDefined();\n        expect(log.mock.calls).toMatchInlineSnapshot(`\n          Array [\n            Array [\n              \"debug\",\n              \"⏰ - Time service initialized.\",\n            ],\n          ]\n        `);\n      })\n      .then(() => done())\n      .catch(done);\n  });\n});\n"],"mappings":";;AAAA;;AACA;;;;;;;;AAEAA,QAAQ,CAAC,iBAAD,EAAoB,MAAM;EAChC,MAAMC,GAAG,GAAGC,IAAI,CAACC,EAAL,EAAZ;EAEAC,UAAU,CAAC,MAAM;IACfH,GAAG,CAACI,SAAJ;EACD,CAFS,CAAV;EAIAC,IAAI,CAAC,aAAD,EAAiBC,IAAD,IAAU;IAC5B,IAAAC,aAAA,EAAgB;MACdP;IADc,CAAhB,EAGGQ,IAHH,CAGSC,IAAD,IAAU;MACdC,MAAM,CAAC,eAAe,OAAOD,IAAvB,CAAN;MACAC,MAAM,CAACV,GAAG,CAACW,IAAJ,CAASC,KAAV,CAAN,CAAuBC,qBAAvB,CAA8C;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,SAPQ;IAQD,CAbH,EAcGL,IAdH,CAcQ,MAAMF,IAAI,EAdlB,EAeGQ,KAfH,CAeSR,IAfT;EAgBD,CAjBG,CAAJ;EAmBAP,QAAQ,CAAC,MAAD,EAAS,MAAM;IACrBM,IAAI,CAAC,aAAD,EAAiBC,IAAD,IAAU;MAC5B,IAAAC,aAAA,EAAgB;QACdP;MADc,CAAhB,EAGGQ,IAHH,CAGSC,IAAD,IAAU;QACdT,GAAG,CAACe,SAAJ;QAEA,MAAMC,GAAG,GAAGP,IAAI,EAAhB;QAEAC,MAAM,CAACV,GAAG,CAACW,IAAJ,CAASC,KAAV,CAAN,CAAuBK,OAAvB,CAA+B,CAC7B,CAAC,OAAD,EAAU,yBAAV,EAAqCD,GAArC,CAD6B,CAA/B;MAGD,CAXH,EAYGR,IAZH,CAYQ,MAAMF,IAAI,EAZlB,EAaGQ,KAbH,CAaSR,IAbT;IAcD,CAfG,CAAJ;EAgBD,CAjBO,CAAR;EAmBAD,IAAI,CAAC,6BAAD,EAAiCC,IAAD,IAAU;IAC5C,IAAIY,mBAAJ,GACGC,QADH,CACYZ,aADZ,EAEGY,QAFH,CAEY,IAAAC,oBAAA,EAAS,KAAT,EAAgBpB,GAAhB,CAFZ,EAGGqB,GAHH,CAGO,CAAC,MAAD,CAHP,EAIGb,IAJH,CAIQ,CAAC;MAAEC;IAAF,CAAD,KAAc;MAClBC,MAAM,CAACD,IAAD,CAAN,CAAaa,WAAb;MACAZ,MAAM,CAACV,GAAG,CAACW,IAAJ,CAASC,KAAV,CAAN,CAAuBC,qBAAvB,CAA8C;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,SAPQ;IAQD,CAdH,EAeGL,IAfH,CAeQ,MAAMF,IAAI,EAflB,EAgBGQ,KAhBH,CAgBSR,IAhBT;EAiBD,CAlBG,CAAJ;AAmBD,CAhEO,CAAR"}