{"version":3,"file":"delay.mock.test.js","names":["describe","test","done","initDelayMock","then","service","create","clear","__resolve","__resolveAll","__reject","__rejectAll","assert","catch","delayPromise","Promise","resolve","all","delayPromises","Array","fill","map","YError","err","equal","code"],"sources":["../src/delay.mock.test.ts"],"sourcesContent":["/* eslint max-nested-callbacks:0 */\nimport assert from 'assert';\nimport YError from 'yerror';\nimport initDelayMock from './delay.mock';\n\ndescribe('initDelayMock', () => {\n  test('should work', (done) => {\n    initDelayMock({})\n      .then(\n        ({\n          service: {\n            create,\n            clear,\n            __resolve,\n            __resolveAll,\n            __reject,\n            __rejectAll,\n          },\n        }) => {\n          assert('function' === typeof create);\n          assert('function' === typeof clear);\n          assert('function' === typeof __resolve);\n          assert('function' === typeof __resolveAll);\n          assert('function' === typeof __reject);\n          assert('function' === typeof __rejectAll);\n        },\n      )\n      .then(() => done())\n      .catch(done);\n  });\n\n  describe('_resolve', () => {\n    test('should work', (done) => {\n      initDelayMock({})\n        .then(({ service: { create, __resolve } }) => {\n          const delayPromise = create(1000);\n\n          return Promise.resolve([__resolve(delayPromise), delayPromise]);\n        })\n        .then(() => done())\n        .catch(done);\n    });\n  });\n\n  describe('_resolveAll', () => {\n    test('should work with no pending delays', (done) => {\n      initDelayMock({})\n        .then(({ service: { __resolveAll } }) => __resolveAll())\n        .then(() => done())\n        .catch(done);\n    });\n\n    test('should work with one pending delay', (done) => {\n      initDelayMock({})\n        .then(({ service: { create, __resolveAll } }) => {\n          const delayPromise = create(1000);\n\n          return Promise.all([delayPromise, __resolveAll()]);\n        })\n        .then(() => done())\n        .catch(done);\n    });\n\n    test('should work with 10 pending delays', (done) => {\n      initDelayMock({})\n        .then(({ service: { create, __resolveAll } }) => {\n          const delayPromises = new Array(10).fill(1).map(() => create(1000));\n\n          return Promise.all([__resolveAll(), ...delayPromises]);\n        })\n        .then(() => done())\n        .catch(done);\n    });\n  });\n\n  describe('_reject', () => {\n    test('should work', (done) => {\n      initDelayMock({})\n        .then(({ service: { create, __reject } }) => {\n          const delayPromise = create(1000);\n\n          return Promise.all([\n            __reject(delayPromise),\n            delayPromise\n              .then(() => {\n                throw new YError('E_UNEXPECTED_SUCCESS');\n              })\n              .catch((err) => {\n                assert.equal(err.code, 'E_DELAY_CLEARED');\n              }),\n          ]);\n        })\n        .then(() => done())\n        .catch(done);\n    });\n  });\n\n  describe('_rejectAll', () => {\n    test('should work with no pending delays', (done) => {\n      initDelayMock({})\n        .then(({ service: { __rejectAll } }) => __rejectAll())\n        .then(() => done())\n        .catch(done);\n    });\n\n    test('should work with one pending delay', (done) => {\n      initDelayMock({})\n        .then(({ service: { create, __rejectAll } }) => {\n          const delayPromise = create(1000);\n\n          return Promise.all([\n            delayPromise\n              .then(() => {\n                throw new YError('E_UNEXPECTED_SUCCESS');\n              })\n              .catch((err) => {\n                assert.equal(err.code, 'E_DELAY_CLEARED');\n              }),\n            __rejectAll(),\n          ]);\n        })\n        .then(() => done())\n        .catch(done);\n    });\n\n    test('should work with 10 pending delays', (done) => {\n      initDelayMock({})\n        .then(({ service: { create, __rejectAll } }) => {\n          const delayPromises = new Array(10)\n            .fill(1)\n            .map(() => create(1000))\n            .map((delayPromise) =>\n              delayPromise\n                .then(() => {\n                  throw new YError('E_UNEXPECTED_SUCCESS');\n                })\n                .catch((err) => {\n                  assert.equal(err.code, 'E_DELAY_CLEARED');\n                }),\n            );\n\n          return Promise.all([__rejectAll(), ...delayPromises]);\n        })\n        .then(() => done())\n        .catch(done);\n    });\n  });\n});\n"],"mappings":"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"}