{"version":3,"file":"process.test.mjs","names":["YError","Knifecycle","constant","initProcessService","describe","log","jest","fn","savedProcessName","global","process","title","processListenerStub","spyOn","exit","exitPromise","fatalErrorDeferred","beforeEach","Promise","resolve","mockClear","mockReset","afterEach","done","NODE_ENV","PROCESS_NAME","$instance","destroy","$fatalError","promise","reject","then","catch","test","expect","mock","calls","toEqual","length","find","call","forEach","signal","register","run"],"sources":["../src/process.test.ts"],"sourcesContent":["import YError from 'yerror';\nimport Knifecycle, { constant } from 'knifecycle';\nimport initProcessService from './process';\n\ndescribe('Process service', () => {\n  const log = jest.fn();\n  const savedProcessName = global.process.title;\n  const processListenerStub = jest.spyOn(global.process, 'on');\n  let exit;\n  let exitPromise;\n  let fatalErrorDeferred;\n\n  beforeEach(() => {\n    exitPromise = new Promise((resolve) => {\n      exit = jest.fn(resolve);\n    });\n    processListenerStub.mockClear();\n    log.mockReset();\n  });\n\n  afterEach(() => {\n    global.process.title = savedProcessName;\n  });\n\n  describe('', () => {\n    beforeEach((done) => {\n      initProcessService({\n        NODE_ENV: 'development',\n        PROCESS_NAME: 'Kikooolol',\n        log,\n        exit,\n        $instance: { destroy: () => Promise.resolve() } as Knifecycle,\n        $fatalError: {\n          promise: new Promise((resolve, reject) => {\n            fatalErrorDeferred = { resolve, reject };\n          }),\n        },\n      })\n        .then(() => done())\n        .catch(done);\n    });\n\n    test('should work', () => {\n      expect(log.mock.calls).toEqual([\n        ['warning', 'ðŸ”‚ - Running in \"development\" environment.'],\n        ['debug', 'ðŸ“‡ - Process service initialized.'],\n      ]);\n      expect(global.process.title).toEqual('Kikooolol - development');\n      expect(processListenerStub.mock.calls.length).toEqual(3);\n    });\n\n    test('should handle fatal errors', (done) => {\n      fatalErrorDeferred.reject(new YError('E_AOUCH'));\n\n      exitPromise\n        .then(() => {\n          expect(exit.mock.calls).toEqual([[1]]);\n        })\n        .then(() => done())\n        .catch(done);\n    });\n\n    test('should handle uncaught exceptions', (done) => {\n      (\n        processListenerStub.mock.calls.find(\n          (call) => 'uncaughtException' === call[0],\n        ) as [unknown, (err: Error) => void]\n      )[1](new YError('E_AOUCH'));\n\n      exitPromise\n        .then(() => {\n          expect(exit.mock.calls).toEqual([[1]]);\n        })\n        .then(() => done())\n        .catch(done);\n    });\n\n    ['SIGINT', 'SIGTERM'].forEach((signal) =>\n      test('should handle `signal`', (done) => {\n        (\n          processListenerStub.mock.calls.find((call) => signal === call[0]) as [\n            unknown,\n            (err: Error) => void,\n          ]\n        )[1](new YError('E_AOUCH'));\n\n        exitPromise\n          .then(() => {\n            expect(exit.mock.calls).toEqual([[0]]);\n          })\n          .then(() => done())\n          .catch(done);\n      }),\n    );\n  });\n\n  test('should work with Knifecycle', (done) => {\n    new Knifecycle()\n      .register(initProcessService)\n      .register(constant('log', log))\n      .register(constant('NODE_ENV', 'production'))\n      .register(constant('exit', exit))\n      .run(['process'])\n      .then(() => {\n        expect(log.mock.calls).toEqual([\n          ['warning', 'ðŸ”‚ - Running in \"production\" environment.'],\n          ['debug', 'ðŸ“‡ - Process service initialized.'],\n        ]);\n      })\n      .then(() => done())\n      .catch(done);\n  });\n});\n"],"mappings":"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"}