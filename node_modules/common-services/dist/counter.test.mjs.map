{"version":3,"file":"counter.test.mjs","names":["Knifecycle","constant","initCounterService","describe","log","jest","fn","beforeEach","mockReset","test","counter","expect","mock","calls","toMatchInlineSnapshot","num","toEqual","register","run","toBeDefined"],"sources":["../src/counter.test.ts"],"sourcesContent":["import Knifecycle, { constant } from 'knifecycle';\nimport initCounterService from './counter';\n\ndescribe('initCounterService', () => {\n  const log = jest.fn();\n\n  beforeEach(() => {\n    log.mockReset();\n  });\n\n  test('should work', async () => {\n    const counter = await initCounterService({\n      log,\n    });\n\n    expect('function' === typeof counter);\n    expect(log.mock.calls).toMatchInlineSnapshot(`\n      Array [\n        Array [\n          \"debug\",\n          \"ðŸ“‡ - Counter service initialized.\",\n        ],\n      ]\n    `);\n  });\n\n  describe('counter', () => {\n    test('should work', async () => {\n      const counter = await initCounterService({\n        log,\n      });\n\n      log.mockReset();\n\n      const num = await counter();\n\n      expect(log.mock.calls).toEqual([['debug', 'ðŸ“‡ - Picked a count:', num]]);\n    });\n  });\n\n  test('should work with Knifecycle', async () => {\n    const { counter } = await new Knifecycle()\n      .register(initCounterService)\n      .register(constant('log', log))\n      .run(['counter']);\n\n    expect(counter).toBeDefined();\n    expect(log.mock.calls).toMatchInlineSnapshot(`\n      Array [\n        Array [\n          \"debug\",\n          \"ðŸ“‡ - Counter service initialized.\",\n        ],\n      ]\n    `);\n  });\n});\n"],"mappings":"AAAA,OAAOA,UAAP,IAAqBC,QAArB,QAAqC,YAArC;AACA,OAAOC,kBAAP,MAA+B,WAA/B;AAEAC,QAAQ,CAAC,oBAAD,EAAuB,MAAM;EACnC,MAAMC,GAAG,GAAGC,IAAI,CAACC,EAAL,EAAZ;EAEAC,UAAU,CAAC,MAAM;IACfH,GAAG,CAACI,SAAJ;EACD,CAFS,CAAV;EAIAC,IAAI,CAAC,aAAD,EAAgB,YAAY;IAC9B,MAAMC,OAAO,GAAG,MAAMR,kBAAkB,CAAC;MACvCE;IADuC,CAAD,CAAxC;IAIAO,MAAM,CAAC,eAAe,OAAOD,OAAvB,CAAN;IACAC,MAAM,CAACP,GAAG,CAACQ,IAAJ,CAASC,KAAV,CAAN,CAAuBC,qBAAvB,CAA8C;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,KAPI;EAQD,CAdG,CAAJ;EAgBAX,QAAQ,CAAC,SAAD,EAAY,MAAM;IACxBM,IAAI,CAAC,aAAD,EAAgB,YAAY;MAC9B,MAAMC,OAAO,GAAG,MAAMR,kBAAkB,CAAC;QACvCE;MADuC,CAAD,CAAxC;MAIAA,GAAG,CAACI,SAAJ;MAEA,MAAMO,GAAG,GAAG,MAAML,OAAO,EAAzB;MAEAC,MAAM,CAACP,GAAG,CAACQ,IAAJ,CAASC,KAAV,CAAN,CAAuBG,OAAvB,CAA+B,CAAC,CAAC,OAAD,EAAU,sBAAV,EAAkCD,GAAlC,CAAD,CAA/B;IACD,CAVG,CAAJ;EAWD,CAZO,CAAR;EAcAN,IAAI,CAAC,6BAAD,EAAgC,YAAY;IAC9C,MAAM;MAAEC;IAAF,IAAc,MAAM,IAAIV,UAAJ,GACvBiB,QADuB,CACdf,kBADc,EAEvBe,QAFuB,CAEdhB,QAAQ,CAAC,KAAD,EAAQG,GAAR,CAFM,EAGvBc,GAHuB,CAGnB,CAAC,SAAD,CAHmB,CAA1B;IAKAP,MAAM,CAACD,OAAD,CAAN,CAAgBS,WAAhB;IACAR,MAAM,CAACP,GAAG,CAACQ,IAAJ,CAASC,KAAV,CAAN,CAAuBC,qBAAvB,CAA8C;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,KAPI;EAQD,CAfG,CAAJ;AAgBD,CArDO,CAAR"}